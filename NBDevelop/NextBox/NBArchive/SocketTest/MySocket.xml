<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MySocket</name>
    </assembly>
    <members>
        <member name="T:NONATEST._SocketServer">
            <summary>
            Socket server class
            </summary>
        </member>
        <member name="F:NONATEST._SocketServer.server">
            <summary>
            server
            </summary>
        </member>
        <member name="M:NONATEST._SocketServer.InitSocket(System.String,System.Int32)">
            <summary>
            init server with (string ip,int port)
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
            <returns>true/false</returns>
        </member>
        <member name="M:NONATEST._SocketServer.StartSocket">
            <summary>
            start server
            </summary>
            <returns></returns>
        </member>
        <member name="M:NONATEST._SocketServer.GetClientList">
            <summary>
            get connected clients list
            </summary>
            <returns></returns>
        </member>
        <member name="M:NONATEST._SocketServer.StopListening">
            <summary>
            stop listening
            </summary>
        </member>
        <member name="T:NONATEST._SocketClient">
            <summary>
            Socket client class
            </summary>
        </member>
        <member name="F:NONATEST._SocketClient.client">
            <summary>
            client
            </summary>
        </member>
        <member name="M:NONATEST._SocketClient.InitSocket(System.String,System.Int32)">
            <summary>
            init client with(sting ip,int port)
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
            <returns>true/false</returns>
        </member>
        <member name="M:NONATEST._SocketClient.ConnectServer">
            <summary>
            conncet server
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:NONATEST._SocketClient.DisconnectServer">
            <summary>
            disconnect server
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:NONATEST._SocketClient.Query(System.String)">
            <summary>
            query request
            </summary>
            <param name="data"></param>
            <returns>string data</returns>
        </member>
        <member name="T:NONATEST.SocketClient">
            <summary>
            Socket客户端
            </summary>
        </member>
        <member name="M:NONATEST.SocketClient.#ctor(System.Int32)">
            <summary>
            构造函数,连接服务器IP地址默认为本机127.0.0.1
            </summary>
            <param name="port">监听的端口</param>
        </member>
        <member name="M:NONATEST.SocketClient.#ctor(System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="ip">监听的IP地址</param>
            <param name="port">监听的端口</param>
        </member>
        <member name="M:NONATEST.SocketClient.StartRecMsg">
            <summary>
            开始接受客户端消息
            </summary>
        </member>
        <member name="M:NONATEST.SocketClient.StartClient">
            <summary>
            开始服务，连接服务端
            </summary>
        </member>
        <member name="M:NONATEST.SocketClient.Send(System.Byte[])">
            <summary>
            发送数据
            </summary>
            <param name="bytes">数据字节</param>
        </member>
        <member name="M:NONATEST.SocketClient.Send(System.String)">
            <summary>
            发送字符串（默认使用UTF-8编码）
            </summary>
            <param name="msgStr">字符串</param>
        </member>
        <member name="M:NONATEST.SocketClient.Send(System.String,System.Text.Encoding)">
            <summary>
            发送字符串（使用自定义编码）
            </summary>
            <param name="msgStr">字符串消息</param>
            <param name="encoding">使用的编码</param>
        </member>
        <member name="P:NONATEST.SocketClient.Property">
            <summary>
            传入自定义属性
            </summary>
        </member>
        <member name="M:NONATEST.SocketClient.Close">
            <summary>
            关闭与服务器的连接
            </summary>
        </member>
        <member name="P:NONATEST.SocketClient.HandleClientStarted">
            <summary>
            客户端连接建立后回调
            </summary>
        </member>
        <member name="P:NONATEST.SocketClient.HandleRecMsg">
            <summary>
            处理接受消息的委托
            </summary>
        </member>
        <member name="P:NONATEST.SocketClient.HandleSendMsg">
            <summary>
            客户端连接发送消息后回调
            </summary>
        </member>
        <member name="P:NONATEST.SocketClient.HandleClientClose">
            <summary>
            客户端连接关闭后回调
            </summary>
        </member>
        <member name="P:NONATEST.SocketClient.HandleException">
            <summary>
            异常处理程序
            </summary>
        </member>
        <member name="T:NONATEST.SocketConnection">
            <summary>
            Socket连接,双向通信
            </summary>
        </member>
        <member name="M:NONATEST.SocketConnection.#ctor(System.Net.Sockets.Socket,NONATEST.SocketServer)">
            <summary>
            构造函数
            </summary>
            <param name="socket">维护的Socket对象</param>
            <param name="server">维护此连接的服务对象</param>
        </member>
        <member name="M:NONATEST.SocketConnection.StartRecMsg">
            <summary>
            开始接受客户端消息
            </summary>
        </member>
        <member name="M:NONATEST.SocketConnection.Send(System.Byte[])">
            <summary>
            发送数据
            </summary>
            <param name="bytes">数据字节</param>
        </member>
        <member name="M:NONATEST.SocketConnection.Send(System.String)">
            <summary>
            发送字符串（默认使用UTF-8编码）
            </summary>
            <param name="msgStr">字符串</param>
        </member>
        <member name="M:NONATEST.SocketConnection.Send(System.String,System.Text.Encoding)">
            <summary>
            发送字符串（使用自定义编码）
            </summary>
            <param name="msgStr">字符串消息</param>
            <param name="encoding">使用的编码</param>
        </member>
        <member name="P:NONATEST.SocketConnection.Property">
            <summary>
            传入自定义属性
            </summary>
        </member>
        <member name="M:NONATEST.SocketConnection.Close">
            <summary>
            关闭当前连接
            </summary>
        </member>
        <member name="P:NONATEST.SocketConnection.HandleRecMsg">
            <summary>
            客户端连接接受新的消息后调用
            </summary>
        </member>
        <member name="P:NONATEST.SocketConnection.HandleSendMsg">
            <summary>
            客户端连接发送消息后回调
            </summary>
        </member>
        <member name="P:NONATEST.SocketConnection.HandleClientClose">
            <summary>
            客户端连接关闭后回调
            </summary>
        </member>
        <member name="P:NONATEST.SocketConnection.HandleException">
            <summary>
            异常处理程序
            </summary>
        </member>
        <member name="T:NONATEST.SocketServer">
            <summary>
            Socket服务端
            </summary>
        </member>
        <member name="M:NONATEST.SocketServer.#ctor(System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="ip">监听的IP地址</param>
            <param name="port">监听的端口</param>
        </member>
        <member name="M:NONATEST.SocketServer.#ctor(System.Int32)">
            <summary>
            构造函数,监听IP地址默认为本机0.0.0.0
            </summary>
            <param name="port">监听的端口</param>
        </member>
        <member name="M:NONATEST.SocketServer.StartServer">
            <summary>
            开始服务，监听客户端
            </summary>
        </member>
        <member name="M:NONATEST.SocketServer.StopListening">
            <summary>
            stop listening
            </summary>
        </member>
        <member name="P:NONATEST.SocketServer.RWLock_ClientList">
            <summary>
            维护客户端列表的读写锁
            </summary>
        </member>
        <member name="M:NONATEST.SocketServer.CloseConnection(NONATEST.SocketConnection)">
            <summary>
            关闭指定客户端连接
            </summary>
            <param name="theConnection">指定的客户端连接</param>
        </member>
        <member name="M:NONATEST.SocketServer.AddConnection(NONATEST.SocketConnection)">
            <summary>
            添加客户端连接
            </summary>
            <param name="theConnection">需要添加的客户端连接</param>
        </member>
        <member name="M:NONATEST.SocketServer.RemoveConnection(NONATEST.SocketConnection)">
            <summary>
            删除指定的客户端连接
            </summary>
            <param name="theConnection">指定的客户端连接</param>
        </member>
        <member name="M:NONATEST.SocketServer.GetConnectionList(System.Func{NONATEST.SocketConnection,System.Boolean})">
            <summary>
            通过条件获取客户端连接列表
            </summary>
            <param name="predicate">筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:NONATEST.SocketServer.GetConnectionList">
            <summary>
            获取所有客户端连接列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:NONATEST.SocketServer.GetTheConnection(System.Func{NONATEST.SocketConnection,System.Boolean})">
            <summary>
            寻找特定条件的客户端连接
            </summary>
            <param name="predicate">筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:NONATEST.SocketServer.GetConnectionCount">
            <summary>
            获取客户端连接数
            </summary>
            <returns></returns>
        </member>
        <member name="P:NONATEST.SocketServer.HandleException">
            <summary>
            异常处理程序
            </summary>
        </member>
        <member name="P:NONATEST.SocketServer.HandleServerStarted">
            <summary>
            服务启动后执行
            </summary>
        </member>
        <member name="P:NONATEST.SocketServer.HandleNewClientConnected">
            <summary>
            当新客户端连接后执行
            </summary>
        </member>
        <member name="P:NONATEST.SocketServer.HandleCloseClient">
            <summary>
            服务端关闭客户端后执行
            </summary>
        </member>
        <member name="P:NONATEST.SocketServer.HandleRecMsg">
            <summary>
            客户端连接接受新的消息后调用
            </summary>
        </member>
        <member name="P:NONATEST.SocketServer.HandleSendMsg">
            <summary>
            客户端连接发送消息后回调
            </summary>
        </member>
        <member name="P:NONATEST.SocketServer.HandleClientClose">
            <summary>
            客户端连接关闭后回调
            </summary>
        </member>
    </members>
</doc>
